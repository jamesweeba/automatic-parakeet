{"ast":null,"code":"var _jsxFileName = \"/home/quaci/Documents/login/client/src/LoginSignup/form.jsx\";\nimport TextInput from './Input';\nimport DropDown from \"./size\";\nimport Button from \"./button\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  setImageDescription,\n  imageDescription,\n  setImageSize,\n  setImageUrl,\n  imageSize,\n  setLoading,\n  setError\n}) {\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setImageUrl(\"\");\n    setError(\"\");\n    // setImageDescription(\"\")\n    setLoading(true);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: imageDescription,\n        size: imageSize\n      })\n    };\n    try {\n      let response = await fetch(`http://localhost:1700/api/v1/generate-images`, requestOptions);\n      let {\n        data,\n        error\n      } = await response.json();\n      if (error) {\n        return setError(error);\n      }\n      // { console.log(\"lllllll\", error) }\n      setImageUrl(data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      setImageDescription: setImageDescription,\n      imageDescription: imageDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      setImageSize: setImageSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["TextInput","DropDown","Button","useState","jsxDEV","_jsxDEV","Form","setImageDescription","imageDescription","setImageSize","setImageUrl","imageSize","setLoading","setError","handleSubmit","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","prompt","size","response","fetch","data","error","json","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/quaci/Documents/login/client/src/LoginSignup/form.jsx"],"sourcesContent":["\nimport TextInput from './Input';\nimport DropDown from \"./size\";\nimport Button from \"./button\";\nimport { useState } from 'react';\nfunction Form({ setImageDescription, imageDescription, setImageSize, setImageUrl, imageSize, setLoading, setError }) {\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        setImageUrl(\"\")\n        setError(\"\")\n        // setImageDescription(\"\")\n        setLoading(true)\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ prompt: imageDescription, size: imageSize })\n        };\n        try {\n            let response = await fetch(`http://localhost:1700/api/v1/generate-images`, requestOptions);\n            let { data, error } = await response.json();\n            if (error) {\n                return setError(error)\n            }\n            // { console.log(\"lllllll\", error) }\n            setImageUrl(data)\n        } catch (err) {\n\n            setError(err)\n        } finally {\n            setLoading(false)\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextInput setImageDescription={setImageDescription} imageDescription={imageDescription} />\n            <DropDown setImageSize={setImageSize} />\n            <Button />\n        </form>\n\n    )\n\n}\n\nexport default Form"],"mappings":";AACA,OAAOA,SAAS,MAAM,SAAS;AAC/B,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,IAAIA,CAAC;EAAEC,mBAAmB;EAAEC,gBAAgB;EAAEC,YAAY;EAAEC,WAAW;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAEjH,eAAeC,YAAYA,CAACC,CAAC,EAAE;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,WAAW,CAAC,EAAE,CAAC;IACfG,QAAQ,CAAC,EAAE,CAAC;IACZ;IACAD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMK,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEf,gBAAgB;QAAEgB,IAAI,EAAEb;MAAU,CAAC;IACtE,CAAC;IACD,IAAI;MACA,IAAIc,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6C,EAAET,cAAc,CAAC;MAC1F,IAAI;QAAEU,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC3C,IAAID,KAAK,EAAE;QACP,OAAOf,QAAQ,CAACe,KAAK,CAAC;MAC1B;MACA;MACAlB,WAAW,CAACiB,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOG,GAAG,EAAE;MAEVjB,QAAQ,CAACiB,GAAG,CAAC;IACjB,CAAC,SAAS;MACNlB,UAAU,CAAC,KAAK,CAAC;IACrB;EAEJ;EACA,oBACIP,OAAA;IAAM0B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBACzB3B,OAAA,CAACL,SAAS;MAACO,mBAAmB,EAAEA,mBAAoB;MAACC,gBAAgB,EAAEA;IAAiB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3F/B,OAAA,CAACJ,QAAQ;MAACQ,YAAY,EAAEA;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC/B,OAAA,CAACH,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAIf;AAACC,EAAA,GAtCQ/B,IAAI;AAwCb,eAAeA,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}