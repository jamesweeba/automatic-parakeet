{"ast":null,"code":"var _jsxFileName = \"/home/quaci/Documents/login/client/src/LoginSignup/TetToImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ImageConverter.css'; // Import a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConverter = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleSubmit = () => {\n    // You can implement your logic to convert text to an image URL here\n    // For simplicity, let's assume a placeholder URL for demonstration\n    const placeholderImageURL = 'https://via.placeholder.com/150';\n    setImageURL(placeholderImageURL);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-converter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"50\",\n      placeholder: \"Enter text...\",\n      value: inputText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), imageURL && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageURL,\n      alt: \"Converted Image\",\n      className: \"converted-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConverter, \"d91fFkcxhhV10g2l7aXvrlfwyiE=\");\n_c = ImageConverter;\nexport default ImageConverter;\nvar _c;\n$RefreshReg$(_c, \"ImageConverter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageConverter","_s","inputText","setInputText","imageURL","setImageURL","handleInputChange","e","target","value","handleSubmit","placeholderImageURL","className","children","rows","cols","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/quaci/Documents/login/client/src/LoginSignup/TetToImage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ImageConverter.css'; // Import a CSS file for styling\n\nconst ImageConverter = () => {\n  const [inputText, setInputText] = useState('');\n  const [imageURL, setImageURL] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    // You can implement your logic to convert text to an image URL here\n    // For simplicity, let's assume a placeholder URL for demonstration\n    const placeholderImageURL = 'https://via.placeholder.com/150';\n    setImageURL(placeholderImageURL);\n  };\n\n  return (\n    <div className=\"image-converter-container\">\n      <textarea\n        rows=\"10\"\n        cols=\"50\"\n        placeholder=\"Enter text...\"\n        value={inputText}\n        onChange={handleInputChange}\n      ></textarea>\n      <br />\n      <button onClick={handleSubmit}>Submit</button>\n      <br />\n      {imageURL && <img src={imageURL} alt=\"Converted Image\" className=\"converted-image\" />}\n    </div>\n  );\n};\n\nexport default ImageConverter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,MAAMC,mBAAmB,GAAG,iCAAiC;IAC7DN,WAAW,CAACM,mBAAmB,CAAC;EAClC,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCd,OAAA;MACEe,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTC,WAAW,EAAC,eAAe;MAC3BP,KAAK,EAAEP,SAAU;MACjBe,QAAQ,EAAEX;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACZtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNtB,OAAA;MAAQuB,OAAO,EAAEZ,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLjB,QAAQ,iBAAIL,OAAA;MAAKwB,GAAG,EAAEnB,QAAS;MAACoB,GAAG,EAAC,iBAAiB;MAACZ,SAAS,EAAC;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}