{"ast":null,"code":"var _jsxFileName = \"/home/quaci/Documents/login/client/src/LoginSignup/form.jsx\";\nimport TextInput from './Input';\nimport DropDown from \"./size\";\nimport Button from \"./button\";\nimport axios from \"axios\";\n// import Buttom from './buttom';\n\n// import data from \"../data\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  setImageDescription,\n  imageDescription,\n  setImageSize,\n  setImageUrl,\n  imageSize,\n  setLoading,\n  setError\n}) {\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (!imageDescription.trim()) {\n      setError(\"please provide image description\");\n      return;\n    }\n    setLoading(true);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify({\n        prompt: imageDescription\n      }),\n      url: 'https://pic-morper.onrender.com/generate-images'\n    };\n    try {\n      let response = await axios(requestOptions);\n      let imagefin = response;\n      setImageUrl(imagefin.data.image);\n    } catch (err) {\n      console.log(err);\n      setError(\"daily limit reached\");\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      setImageDescription: setImageDescription,\n      imageDescription: imageDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      setImageSize: setImageSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["TextInput","DropDown","Button","axios","jsxDEV","_jsxDEV","Form","setImageDescription","imageDescription","setImageSize","setImageUrl","imageSize","setLoading","setError","handleSubmit","e","preventDefault","trim","requestOptions","method","headers","data","JSON","stringify","prompt","url","response","imagefin","image","err","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/quaci/Documents/login/client/src/LoginSignup/form.jsx"],"sourcesContent":["\nimport TextInput from './Input';\nimport DropDown from \"./size\";\nimport Button from \"./button\";\nimport axios from \"axios\";\n// import Buttom from './buttom';\n\n// import data from \"../data\"\n\nfunction Form({ setImageDescription, imageDescription, setImageSize, setImageUrl, imageSize, setLoading, setError }) {\n\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        if (!imageDescription.trim()) {\n            setError(\"please provide image description\")\n            return;\n\n        }\n\n        setLoading(true)\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            data: JSON.stringify({ prompt: imageDescription }),\n            url: 'https://pic-morper.onrender.com/generate-images'\n        };\n\n        try {\n            let response = await axios(requestOptions);\n            let imagefin = response;\n            setImageUrl(imagefin.data.image);\n        } catch (err) {\n            console.log(err);\n            setError(\"daily limit reached\");\n        } finally {\n            setLoading(false)\n        }\n\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextInput setImageDescription={setImageDescription} imageDescription={imageDescription} />\n            <DropDown setImageSize={setImageSize} />\n            <Button />\n        </form>\n\n\n    )\n\n}\n\nexport default Form"],"mappings":";AACA,OAAOA,SAAS,MAAM,SAAS;AAC/B,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAC;EAAEC,mBAAmB;EAAEC,gBAAgB;EAAEC,YAAY;EAAEC,WAAW;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAGjH,eAAeC,YAAYA,CAACC,CAAC,EAAE;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,gBAAgB,CAACS,IAAI,CAAC,CAAC,EAAE;MAC1BJ,QAAQ,CAAC,kCAAkC,CAAC;MAC5C;IAEJ;IAEAD,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMM,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEhB;MAAiB,CAAC,CAAC;MAClDiB,GAAG,EAAE;IACT,CAAC;IAED,IAAI;MACA,IAAIC,QAAQ,GAAG,MAAMvB,KAAK,CAACe,cAAc,CAAC;MAC1C,IAAIS,QAAQ,GAAGD,QAAQ;MACvBhB,WAAW,CAACiB,QAAQ,CAACN,IAAI,CAACO,KAAK,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBhB,QAAQ,CAAC,qBAAqB,CAAC;IACnC,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EAEJ;EACA,oBACIP,OAAA;IAAM2B,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBACzB5B,OAAA,CAACL,SAAS;MAACO,mBAAmB,EAAEA,mBAAoB;MAACC,gBAAgB,EAAEA;IAAiB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3FhC,OAAA,CAACJ,QAAQ;MAACQ,YAAY,EAAEA;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxChC,OAAA,CAACH,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAKf;AAACC,EAAA,GA3CQhC,IAAI;AA6Cb,eAAeA,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}